name: Build & Deploy to Yandex K8s
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Yandex CLI
      run: |
        curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
        echo "${HOME}/yandex-cloud/bin" >> $GITHUB_PATH
    - name: Configure Yandex Cloud
      run: |
        echo "${{ secrets.YC_SA_JSON_B64 }}" | base64 -d > sa-key.json
        yc config set service-account-key sa-key.json
        yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
        yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
    - name: Auth to Container Registry
      run: yc container registry configure-docker
    - name: Build & Push Backend
      run: |
        docker build -t cr.yandex/${{ secrets.YC_REG_ID }}/aeromap-backend:${{ github.sha }} ./aeromap-backend
        docker push cr.yandex/${{ secrets.YC_REG_ID }}/aeromap-backend:${{ github.sha }}
    - name: Build & Push Frontend
      run: |
        docker build -t cr.yandex/${{ secrets.YC_REG_ID }}/aeromap-frontend:${{ github.sha }} ./aeromap-frontend
        docker push cr.yandex/${{ secrets.YC_REG_ID }}/aeromap-frontend:${{ github.sha }}
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Yandex CLI
      run: |
        curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
        echo "${HOME}/yandex-cloud/bin" >> $GITHUB_PATH
    - name: Configure Yandex Cloud
      run: |
        echo "${{ secrets.YC_SA_JSON_B64 }}" | base64 -d > sa-key.json
        yc config set service-account-key sa-key.json
        yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
        yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
    - name: Set up kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.34.1'
    - name: Generate kubeconfig
      run: |
        yc managed-kubernetes cluster get-credentials --id ${{ secrets.YC_CLUSTER_ID }} --external --kubeconfig kubeconfig.yaml
        export KUBECONFIG=$PWD/kubeconfig.yaml
    - name: Update Deployments
      run: |
        kubectl -n aeromap set image deployment/aeromap-backend aeromap-backend=cr.yandex/${{ secrets.YC_REG_ID }}/aeromap-backend:${{ github.sha }}
        kubectl -n aeromap set image deployment/aeromap-frontend aeromap-frontend=cr.yandex/${{ secrets.YC_REG_ID }}/aeromap-frontend:${{ github.sha }}
        kubectl rollout status deployment/aeromap-backend -n aeromap --timeout=5m
        kubectl rollout status deployment/aeromap-frontend -n aeromap --timeout=5m